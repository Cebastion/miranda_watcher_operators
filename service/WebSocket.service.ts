import WebSocket from 'ws';
import fs from 'fs'
import { EEvents } from '../enum/event.enum';

export class WebSocketService {
    private ws = new WebSocket('wss://cstat.nextel.com.ua:11444/proxima/28');
    constructor() {
        this.ws.on(EEvents.message, this.getChatMessages())
    }
    static connetect() {
        console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!');

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        const authMessage = {
            requestId: 70311,
            type: "AUTHORIZATION",
            token: "O5aRgbiiDu0Q"
        };

        this.ws.send(JSON.stringify(authMessage));
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', authMessage);
    }

    getChatMessages(data: any) {
        try {
            const chat = JSON.parse(data.toString());
            if (chat.type === 'MESSAGES') {
                chat.content.forEach((msg: { userName: string; text: string; chatId: string }) => {
                    console.log('üì• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', msg.userName, msg.text, msg.chatId);

                    const chatData = { OperatorName: msg.userName, text: [msg.text], chatId: msg.chatId };

                    fs.writeFile('data.json', JSON.stringify(chatData, null, 2), 'utf8', (err) => {
                        if (err) console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª:', err);
                    });
                });
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        }
    }

    static getError(error: Error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    }

    static disconnect(code: number, reason: Buffer<ArrayBufferLike>) {
        console.log(`üî¥ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ.–ö–æ–¥: ${code}, –ü—Ä–∏—á–∏–Ω–∞: ${reason.toString()}`);
    }
}
